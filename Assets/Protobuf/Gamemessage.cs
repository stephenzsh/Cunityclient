// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamemessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf {

  /// <summary>Holder for reflection information generated from gamemessage.proto</summary>
  public static partial class GamemessageReflection {

    #region Descriptor
    /// <summary>File descriptor for gamemessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GamemessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFnYW1lbWVzc2FnZS5wcm90bxIIUHJvdG9idWYiwgEKC0dhbWVNZXNzYWdl",
            "Eg4KBnJvb21pZBgBIAEoBBIzCgdwbGF5ZXJzGAIgAygLMiIuUHJvdG9idWYu",
            "R2FtZU1lc3NhZ2UuUGxheWVyc0VudHJ5EgsKA251bRgDIAEoBBISCgpnYW1l",
            "c3RhdHVzGAQgASgIEgwKBG5hbWUYBSABKAkSDwoHbWVzc2FnZRgGIAEoCRou",
            "CgxQbGF5ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgIOgI4",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.GameMessage), global::Protobuf.GameMessage.Parser, new[]{ "Roomid", "Players", "Num", "Gamestatus", "Name", "Message" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameMessage : pb::IMessage<GameMessage> {
    private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.GamemessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage(GameMessage other) : this() {
      roomid_ = other.roomid_;
      players_ = other.players_.Clone();
      num_ = other.num_;
      gamestatus_ = other.gamestatus_;
      name_ = other.name_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage Clone() {
      return new GameMessage(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private ulong roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Roomid {
      get { return roomid_; }
      set {
        roomid_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pbc::MapField<string, bool>.Codec _map_players_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBool(16, false), 18);
    private readonly pbc::MapField<string, bool> players_ = new pbc::MapField<string, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private ulong num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "gamestatus" field.</summary>
    public const int GamestatusFieldNumber = 4;
    private bool gamestatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Gamestatus {
      get { return gamestatus_; }
      set {
        gamestatus_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (!Players.Equals(other.Players)) return false;
      if (Num != other.Num) return false;
      if (Gamestatus != other.Gamestatus) return false;
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomid != 0UL) hash ^= Roomid.GetHashCode();
      hash ^= Players.GetHashCode();
      if (Num != 0UL) hash ^= Num.GetHashCode();
      if (Gamestatus != false) hash ^= Gamestatus.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Roomid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Roomid);
      }
      players_.WriteTo(output, _map_players_codec);
      if (Num != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Num);
      }
      if (Gamestatus != false) {
        output.WriteRawTag(32);
        output.WriteBool(Gamestatus);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Roomid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Roomid);
      }
      size += players_.CalculateSize(_map_players_codec);
      if (Num != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Num);
      }
      if (Gamestatus != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMessage other) {
      if (other == null) {
        return;
      }
      if (other.Roomid != 0UL) {
        Roomid = other.Roomid;
      }
      players_.Add(other.players_);
      if (other.Num != 0UL) {
        Num = other.Num;
      }
      if (other.Gamestatus != false) {
        Gamestatus = other.Gamestatus;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadUInt64();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _map_players_codec);
            break;
          }
          case 24: {
            Num = input.ReadUInt64();
            break;
          }
          case 32: {
            Gamestatus = input.ReadBool();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
